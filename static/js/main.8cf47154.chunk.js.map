{"version":3,"sources":["header.js","App.js","reportWebVitals.js","index.js"],"names":["headersData","label","href","useStyles","makeStyles","header","backgroundColor","padding","logo","fontFamily","fontWeight","color","textAlign","menuButton","size","marginLeft","toolbar","display","justifyContent","navs","marginRight","Header","Portfolio","Typography","variant","component","className","getMenuButtons","map","Button","key","to","RouterLink","AppBar","Toolbar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAUMA,EAAc,CAClB,CACEC,MAAO,QACPC,KAAM,UAER,CACED,MAAO,WACPC,KAAM,aAER,CACED,MAAO,aACPC,KAAM,eAER,CACED,MAAO,aACPC,KAAM,aAIJC,EAAYC,aAAW,iBAAO,CAClCC,OAAQ,CACNC,gBAAiB,UACjBC,QAAS,aAEXC,KAAM,CACJC,WAAY,wBACZC,WAAY,IACZC,MAAO,UACPC,UAAW,QAEbC,WAAY,CACVJ,WAAY,wBACZC,WAAY,IACZI,KAAM,OACNC,WAAY,QAEdC,QAAS,CACPC,QAAS,OACTC,eAAgB,iBAElBC,KAAM,CACJJ,WAAY,OACZK,YAAa,SAIF,SAASC,IACtB,MAA2ClB,IAAnCE,EAAR,EAAQA,OAAQG,EAAhB,EAAgBA,KAAMK,EAAtB,EAAsBA,WAAYM,EAAlC,EAAkCA,KAW5BG,EACJ,cAACC,EAAA,EAAD,CAAYC,QAAQ,MAAMC,UAAU,KAAKC,UAAWlB,EAApD,uBAKImB,EAAiB,WACrB,OAAO3B,EAAY4B,KAAI,YAAsB,IAAnB3B,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC/B,OACE,cAAC2B,EAAA,EAAD,CAEIC,IAAK7B,EACLU,MAAO,UACPoB,GAAI7B,EACJuB,UAAWO,IACXN,UAAWb,EANf,SASGZ,QAMT,OAAO,cAACgC,EAAA,EAAD,CAAQP,UAAWrB,EAAnB,SA/BH,eAAC6B,EAAA,EAAD,WACGZ,EACD,qBAAKI,UAAWP,EAAhB,SAAuBQ,WCrDhBQ,MARf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,cAACL,EAAD,OCOSe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8cf47154.chunk.js","sourcesContent":["import {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  Button,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst headersData = [\n  {\n    label: \"About\",\n    href: \"/about\",\n  },\n  {\n    label: \"Projects\",\n    href: \"/projects\",\n  },\n  {\n    label: \"Experience\",\n    href: \"/experience\",\n  },\n  {\n    label: \"Contact me\",\n    href: \"/contact\",\n  },\n];\n\nconst useStyles = makeStyles(() => ({\n  header: {\n    backgroundColor: \"#4267B2\",\n    padding: \"0 5% 0 5%\",\n  },\n  logo: {\n    fontFamily: \"Work Sans, sans-serif\",\n    fontWeight: 600,\n    color: \"#FFFEFE\",\n    textAlign: \"left\",\n  },\n  menuButton: {\n    fontFamily: \"Open Sans, sans-serif\",\n    fontWeight: 700,\n    size: \"18px\",\n    marginLeft: \"38px\",\n  },\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  navs: {\n    marginLeft: \"auto\",\n    marginRight: \"0\",\n  },\n}));\n\nexport default function Header() {\n  const { header, logo, menuButton, navs } = useStyles();\n\n  const displayHeader = () => {\n    return (\n      <Toolbar>\n        {Portfolio}\n        <div className={navs}>{getMenuButtons()}</div>\n      </Toolbar>\n    );\n  };\n\n  const Portfolio = (\n    <Typography variant=\"h6 \" component=\"h1\" className={logo}>\n      Portfolio\n    </Typography>\n  );\n\n  const getMenuButtons = () => {\n    return headersData.map(({ label, href }) => {\n      return (\n        <Button\n          {...{\n            key: label,\n            color: \"inherit\",\n            to: href,\n            component: RouterLink,\n            className: menuButton,\n          }}\n        >\n          {label}\n        </Button>\n      );\n    });\n  };\n\n  return <AppBar className={header}>{displayHeader()}</AppBar>;\n}\n","import \"./App.css\";\nimport Header from \"./header\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}